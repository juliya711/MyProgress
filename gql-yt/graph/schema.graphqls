type JobListing {
  _id: ID!
  title: String!
  description: String!
  company: String!
  url: String!
}

type Query {
  jobs: [JobListing!]!
  job(id: ID!): JobListing!
  exportDevicesDiscovered(input: ExportDevicesDiscoveredInput!): DevicesDiscoveredResponse
}

type Mutation {
  createJobListing(input: CreateJobListingInput!): JobListing!
  updateJobListing(id: ID!, input: UpdateJobListingInput!): JobListing!
  deleteJobListing(id: ID!): DeleteJobResponse!
}


input CreateJobListingInput {
  title: String!
  description: String!
  company: String!
  url: String!
}

input UpdateJobListingInput {
  title: String!
  description: String!
  url: String!
}

type DeleteJobResponse {
  deleteJobId: String!
}

input ExportDevicesDiscoveredInput {
    companyID: String!
    assessmentID: String!
}

type DeviceDiscovered {
    productIdentifier: String
    hostname: String
    vendorCd: String
    department: String
    replacementProduct: String
    contractedStatus: String
    country: String
    locations: String
    serialNumber: String
    ipAddress: String
    endOfSale: String
    endOfSupport: String
    productFamily: String
    productCategory: String
    softwareType: String
    softwareVersion: String
    moduleSerialNumber: String
    type: String
}

type DevicesDiscoveredResponse {
    devicesDiscoveredSuccessfully: [DeviceDiscovered!]!
}